{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../contacts/contacts.service\";\nimport * as i3 from \"@angular/forms\";\nexport class EditContactComponent {\n  // // firstName = new FormControl('Murat'); initial value\n  // firstName = new FormControl();\n  // lastName = new FormControl();\n  // dateOfBirth = new FormControl();\n  // favoritesRanking = new FormControl();\n  constructor(route, contactsService, router, fb) {\n    this.route = route;\n    this.contactsService = contactsService;\n    this.router = router;\n    this.fb = fb;\n    //#region Before form builder decleration\n    // contactForm = new FormGroup({\n    //   id : new FormControl(),\n    //   firstName : new FormControl(),\n    //   lastName : new FormControl(),\n    //   dateOfBirth : new FormControl(),\n    //   favoritesRanking : new FormControl(),\n    //   phone : new FormGroup({\n    //     phoneNumber :  new FormControl(),\n    //     phoneType :  new FormControl(),\n    //   }),\n    //   address : new FormGroup({\n    //     streetAddress :  new FormControl(),\n    //     city :  new FormControl(),\n    //     state :  new FormControl(),\n    //     postalCode :  new FormControl(),\n    //     addressType :  new FormControl(),\n    //   })\n    // });\n    //#endregion\n    this.contactForm = this.fb.group({\n      id: '',\n      firstName: '',\n      lastName: '',\n      dateOfBirth: null,\n      favoritesRanking: null,\n      phone: this.fb.group({\n        phoneNumber: '',\n        phoneType: ''\n      }),\n      address: this.fb.group({\n        streetAddress: '',\n        city: '',\n        state: '',\n        postalCode: '',\n        addressType: ''\n      })\n    });\n  }\n  ngOnInit() {\n    const contactId = this.route.snapshot.params['id']; //add contact id to route\n    if (!contactId) return;\n    this.contactsService.getContact(contactId).subscribe(contact => {\n      // this.firstName.setValue(contact?.firstName);\n      // this.lastName.setValue(contact?.lastName);\n      // this.dateOfBirth.setValue(contact?.dateOfBirth);\n      // this.favoritesRanking.setValue(contact?.favoritesRanking);\n      this.contactForm.controls.id.setValue(contact.id);\n      this.contactForm.controls.firstName.setValue(contact?.firstName);\n      this.contactForm.controls.lastName.setValue(contact?.lastName);\n      this.contactForm.controls.dateOfBirth.setValue(contact?.dateOfBirth);\n      this.contactForm.controls.favoritesRanking.setValue(contact?.favoritesRanking);\n      this.contactForm.controls.phone.controls.phoneNumber.setValue(contact?.phone.phoneNumber);\n      this.contactForm.controls.phone.controls.phoneType.setValue(contact?.phone.phoneType);\n      this.contactForm.controls.address.controls.streetAddress.setValue(contact?.address.streetAddress);\n      this.contactForm.controls.address.controls.city.setValue(contact?.address.city);\n      this.contactForm.controls.address.controls.state.setValue(contact?.address.state);\n      this.contactForm.controls.address.controls.postalCode.setValue(contact?.address.postalCode);\n      this.contactForm.controls.address.controls.addressType.setValue(contact?.address.addressType);\n    });\n  }\n  saveContact() {\n    console.log(this.contactForm.value); //gets all info as json object\n    //this.contactsService.saveContact(this.contactForm.value); if all contact field is optional like id?, firstName? etc. or we need to assign Contact as partial in the services like Partial<Contact>\n    // this.contactsService.saveContact(this.contactForm.value).subscribe({\n    this.contactsService.saveContact(this.contactForm.getRawValue()).subscribe({\n      next: () => this.router.navigate(['/contacts'])\n    });\n    // console.log(this.contactForm.controls.firstName.value);\n    // console.log(this.contactForm.controls.lastName.value);\n    // console.log(this.contactForm.controls.dateOfBirth.value);\n    // console.log(this.contactForm.controls.favoritesRanking.value);\n  }\n}\n\nEditContactComponent.ɵfac = function EditContactComponent_Factory(t) {\n  return new (t || EditContactComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ContactsService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nEditContactComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditContactComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 49,\n  vars: 1,\n  consts: [[1, \"content\"], [1, \"header\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"firstName\", \"placeholder\", \"First Name\"], [\"formControlName\", \"lastName\", \"placeholder\", \"Last Name\"], [\"formControlName\", \"dateOfBirth\", \"placeholder\", \"Date of Birth\"], [\"formControlName\", \"favoritesRanking\", \"placeholder\", \"Favorites Ranking\"], [\"formGroupName\", \"phone\", 1, \"flex-column\"], [1, \"flex-group\"], [\"formControlName\", \"phoneNumber\", \"placeholder\", \"Phone\"], [\"src\", \"/assets/plus-grey-blue.png\", 1, \"add\"], [1, \"radio\"], [\"type\", \"radio\", \"formControlName\", \"phoneType\", \"value\", \"mobile\"], [\"type\", \"radio\", \"formControlName\", \"phoneType\", \"value\", \"work\"], [\"type\", \"radio\", \"formControlName\", \"phoneType\", \"value\", \"other\"], [\"formGroupName\", \"address\", 1, \"address\"], [\"formControlName\", \"streetAddress\", \"placeholder\", \"Address\"], [\"placeholder\", \"City\", \"formControlName\", \"city\"], [\"placeholder\", \"State/Region\", \"formControlName\", \"state\"], [\"placeholder\", \"Zip/Postal Code\", \"formControlName\", \"postalCode\"], [\"value\", \"home\"], [\"value\", \"work\"], [\"value\", \"mobile\"], [1, \"buttons\"], [1, \"secondary\"], [\"type\", \"submit\", 1, \"primary\", 3, \"click\"]],\n  template: function EditContactComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Edit Contact\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function EditContactComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.saveContact();\n      });\n      i0.ɵɵelementStart(4, \"section\")(5, \"nav\");\n      i0.ɵɵtext(6, \"Name/Info\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\");\n      i0.ɵɵelement(8, \"input\", 3)(9, \"input\", 4)(10, \"input\", 5)(11, \"input\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"section\")(13, \"nav\");\n      i0.ɵɵtext(14, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"div\", 8);\n      i0.ɵɵelement(17, \"input\", 9)(18, \"img\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 11);\n      i0.ɵɵelement(20, \"input\", 12);\n      i0.ɵɵtext(21, \" Mobile \");\n      i0.ɵɵelement(22, \"input\", 13);\n      i0.ɵɵtext(23, \" Work \");\n      i0.ɵɵelement(24, \"input\", 14);\n      i0.ɵɵtext(25, \" Other \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"section\")(27, \"nav\");\n      i0.ɵɵtext(28, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\")(30, \"div\", 15)(31, \"div\", 8);\n      i0.ɵɵelement(32, \"input\", 16)(33, \"img\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"input\", 17)(35, \"input\", 18)(36, \"input\", 19);\n      i0.ɵɵelementStart(37, \"select\")(38, \"option\", 20);\n      i0.ɵɵtext(39, \"Home\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"option\", 21);\n      i0.ɵɵtext(41, \"Work\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"option\", 22);\n      i0.ɵɵtext(43, \"Other\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(44, \"div\", 23)(45, \"button\", 24);\n      i0.ɵɵtext(46, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function EditContactComponent_Template_button_click_47_listener() {\n        return ctx.saveContact();\n      });\n      i0.ɵɵtext(48, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.contactForm);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName],\n  styles: [\".content[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  border: 1px solid #ccc;\\n}\\n\\nh1[_ngcontent-%COMP%] {\\n  background-color: var(--color-primary);\\n  color: var(--font-color-dark-bg);\\n  font-size: 28px;\\n  padding: 5px 10px;\\n  border-bottom: 1px solid #fff;\\n  margin: 0;\\n}\\n\\nsection[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n\\nsection[_ngcontent-%COMP%]   nav[_ngcontent-%COMP%] {\\n  padding: 10px 30px 10px 0;\\n  background-color: var(--color-primary);\\n  color: var(--font-color-dark-bg);\\n  flex: 0 0 200px;\\n  border-bottom: 2px solid white;\\n  display: flex;\\n  align-items: center;\\n  justify-content: right;\\n}\\n\\nsection[_ngcontent-%COMP%]:last-child   nav[_ngcontent-%COMP%] {\\n  border-bottom: none;\\n}\\n\\nsection[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 10px 20px;\\n  flex-grow: 1;\\n  justify-content: center;\\n}\\n\\nsection[_ngcontent-%COMP%]   div.flex-column[_ngcontent-%COMP%] {\\n  flex-direction: column;\\n  flex-grow: 1;\\n  justify-content: center;\\n}\\n\\nsection[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  max-width: 500px;\\n}\\n\\nsection[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n  margin: 5px 0;\\n  max-width: 520px;\\n}\\n\\nsection[_ngcontent-%COMP%]   div.radio[_ngcontent-%COMP%] {\\n  display: block;\\n  font-size: 20px;\\n}\\n\\nsection[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   *[_ngcontent-%COMP%] {\\n  margin: 5px 10px 5px 0;\\n}\\n\\nsection[_ngcontent-%COMP%]   div.radio[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]:not(:first-child) {\\n  margin-left: 10px;\\n}\\n\\nsection[_ngcontent-%COMP%]   div.radio[_ngcontent-%COMP%]   input[type=\\\"radio\\\"][_ngcontent-%COMP%] {\\n  margin-right: 0;\\n}\\n\\nsection[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n\\n.address[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.address[_ngcontent-%COMP%]:not(:first-child) {\\n  margin-top: 20px;\\n}\\n\\n.add[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  width: 45px;\\n}\\n\\n.flex-group[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center\\n}\\n\\n.flex-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  flex-grow: 1;\\n}\\n\\ninput.error[_ngcontent-%COMP%], select.error[_ngcontent-%COMP%], textarea.error[_ngcontent-%COMP%], .error[_ngcontent-%COMP%] {\\n  border: 1px solid var(--color-error);\\n}\\n\\nsection[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   em[_ngcontent-%COMP%] {\\n  color: var(--color-error);\\n  font-size: 18px;\\n  margin-bottom: 10px;\\n  margin-top: -5px;\\n  font-style: normal;\\n  display: block;\\n}\\n\\n.buttons[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  display: flex;\\n  gap: 10px;\\n}\\n\\n.buttons[_ngcontent-%COMP%]   *[_ngcontent-%COMP%] {\\n  flex: 1 1 auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZWRpdC1jb250YWN0L2VkaXQtY29udGFjdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxzQ0FBc0M7RUFDdEMsZ0NBQWdDO0VBQ2hDLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsNkJBQTZCO0VBQzdCLFNBQVM7QUFDWDs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixzQ0FBc0M7RUFDdEMsZ0NBQWdDO0VBQ2hDLGVBQWU7RUFDZiw4QkFBOEI7RUFDOUIsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0VBQ2I7QUFDRjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTs7OztFQUlFLG9DQUFvQztBQUN0Qzs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IsU0FBUztBQUNYOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbn1cblxuaDEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1wcmltYXJ5KTtcbiAgY29sb3I6IHZhcigtLWZvbnQtY29sb3ItZGFyay1iZyk7XG4gIGZvbnQtc2l6ZTogMjhweDtcbiAgcGFkZGluZzogNXB4IDEwcHg7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZmZmO1xuICBtYXJnaW46IDA7XG59XG5cbnNlY3Rpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG5zZWN0aW9uIG5hdiB7XG4gIHBhZGRpbmc6IDEwcHggMzBweCAxMHB4IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLXByaW1hcnkpO1xuICBjb2xvcjogdmFyKC0tZm9udC1jb2xvci1kYXJrLWJnKTtcbiAgZmxleDogMCAwIDIwMHB4O1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgd2hpdGU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogcmlnaHQ7XG59XG5cbnNlY3Rpb246bGFzdC1jaGlsZCBuYXYge1xuICBib3JkZXItYm90dG9tOiBub25lO1xufVxuXG5zZWN0aW9uPmRpdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgZmxleC1ncm93OiAxO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuc2VjdGlvbiBkaXYuZmxleC1jb2x1bW4ge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmbGV4LWdyb3c6IDE7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG5zZWN0aW9uIGRpdiBpbnB1dCB7XG4gIG1heC13aWR0aDogNTAwcHg7XG59XG5cbnNlY3Rpb24gZGl2IHNlbGVjdCB7XG4gIG1hcmdpbjogNXB4IDA7XG4gIG1heC13aWR0aDogNTIwcHg7XG59XG5cbnNlY3Rpb24gZGl2LnJhZGlvIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuc2VjdGlvbiBkaXYgKiB7XG4gIG1hcmdpbjogNXB4IDEwcHggNXB4IDA7XG59XG5cbnNlY3Rpb24gZGl2LnJhZGlvICo6bm90KDpmaXJzdC1jaGlsZCkge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuc2VjdGlvbiBkaXYucmFkaW8gaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuXG5zZWN0aW9uIGRpdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5hZGRyZXNzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmFkZHJlc3M6bm90KDpmaXJzdC1jaGlsZCkge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4uYWRkIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB3aWR0aDogNDVweDtcbn1cblxuLmZsZXgtZ3JvdXAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyXG59XG5cbi5mbGV4LWdyb3VwIGlucHV0IHtcbiAgZmxleC1ncm93OiAxO1xufVxuXG5pbnB1dC5lcnJvcixcbnNlbGVjdC5lcnJvcixcbnRleHRhcmVhLmVycm9yLFxuLmVycm9yIHtcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY29sb3ItZXJyb3IpO1xufVxuXG5zZWN0aW9uIGRpdiBlbSB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvci1lcnJvcik7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgbWFyZ2luLXRvcDogLTVweDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmJ1dHRvbnMge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDEwcHg7XG59XG5cbi5idXR0b25zICoge1xuICBmbGV4OiAxIDEgYXV0bztcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["EditContactComponent","constructor","route","contactsService","router","fb","contactForm","group","id","firstName","lastName","dateOfBirth","favoritesRanking","phone","phoneNumber","phoneType","address","streetAddress","city","state","postalCode","addressType","ngOnInit","contactId","snapshot","params","getContact","subscribe","contact","controls","setValue","saveContact","console","log","value","getRawValue","next","navigate","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","ContactsService","Router","i3","FormBuilder","selectors","decls","vars","consts","template","EditContactComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EditContactComponent_Template_form_ngSubmit_3_listener","ɵɵelement","EditContactComponent_Template_button_click_47_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/muratseker/Documents/repos/angular-reactive-forms/src/app/edit-contact/edit-contact.component.ts","/Users/muratseker/Documents/repos/angular-reactive-forms/src/app/edit-contact/edit-contact.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ContactsService } from '../contacts/contacts.service';\n\n@Component({\n  templateUrl: './edit-contact.component.html',\n  styleUrls: ['./edit-contact.component.css']\n})\nexport class EditContactComponent implements OnInit {\n  //#region Before form builder decleration\n  // contactForm = new FormGroup({\n  //   id : new FormControl(),\n  //   firstName : new FormControl(),\n  //   lastName : new FormControl(),\n  //   dateOfBirth : new FormControl(),\n  //   favoritesRanking : new FormControl(),\n  //   phone : new FormGroup({\n  //     phoneNumber :  new FormControl(),\n  //     phoneType :  new FormControl(),\n  //   }),\n  //   address : new FormGroup({\n  //     streetAddress :  new FormControl(),\n  //     city :  new FormControl(),\n  //     state :  new FormControl(),\n  //     postalCode :  new FormControl(),\n  //     addressType :  new FormControl(),\n  //   })\n  // });\n  //#endregion\n\n  contactForm = this.fb.group({\n      id : '',\n      firstName : '',\n      lastName : '',\n      dateOfBirth : <Date | null> null,\n      favoritesRanking : <number | null> null,\n      phone : this.fb.group({\n        phoneNumber :  '',\n        phoneType :  '',\n      }),\n      address : this.fb.group({\n        streetAddress :  '',\n        city :  '',\n        state :  '',\n        postalCode :  '',\n        addressType :  '',\n      })\n    });\n\n  // // firstName = new FormControl('Murat'); initial value\n  // firstName = new FormControl();\n  // lastName = new FormControl();\n  // dateOfBirth = new FormControl();\n  // favoritesRanking = new FormControl();\n\n  constructor(\n    private route: ActivatedRoute, \n    private contactsService: ContactsService, \n    private router: Router,\n    private fb: FormBuilder) { }\n\n  ngOnInit() {\n    const contactId = this.route.snapshot.params['id'];//add contact id to route\n    if (!contactId) return\n\n    this.contactsService.getContact(contactId).subscribe((contact) => {\n      // this.firstName.setValue(contact?.firstName);\n      // this.lastName.setValue(contact?.lastName);\n      // this.dateOfBirth.setValue(contact?.dateOfBirth);\n      // this.favoritesRanking.setValue(contact?.favoritesRanking);\n\n      this.contactForm.controls.id.setValue(contact.id);\n      this.contactForm.controls.firstName.setValue(contact?.firstName);\n      this.contactForm.controls.lastName.setValue(contact?.lastName);\n      this.contactForm.controls.dateOfBirth.setValue(contact?.dateOfBirth);\n      this.contactForm.controls.favoritesRanking.setValue(contact?.favoritesRanking);\n      this.contactForm.controls.phone.controls.phoneNumber.setValue(contact?.phone.phoneNumber);\n      this.contactForm.controls.phone.controls.phoneType.setValue(contact?.phone.phoneType);\n      this.contactForm.controls.address.controls.streetAddress.setValue(contact?.address.streetAddress);\n      this.contactForm.controls.address.controls.city.setValue(contact?.address.city);\n      this.contactForm.controls.address.controls.state.setValue(contact?.address.state);\n      this.contactForm.controls.address.controls.postalCode.setValue(contact?.address.postalCode);\n      this.contactForm.controls.address.controls.addressType.setValue(contact?.address.addressType);\n    });\n  }\n\n  saveContact() {\n    console.log(this.contactForm.value);//gets all info as json object\n    //this.contactsService.saveContact(this.contactForm.value); if all contact field is optional like id?, firstName? etc. or we need to assign Contact as partial in the services like Partial<Contact>\n    // this.contactsService.saveContact(this.contactForm.value).subscribe({\n      this.contactsService.saveContact(this.contactForm.getRawValue()).subscribe({ // after making phone and address as FormGroup\n      next: () => this.router.navigate(['/contacts'])\n    });\n\n    // console.log(this.contactForm.controls.firstName.value);\n    // console.log(this.contactForm.controls.lastName.value);\n    // console.log(this.contactForm.controls.dateOfBirth.value);\n    // console.log(this.contactForm.controls.favoritesRanking.value);\n  }\n}\n","<div class=\"content\">\n  <h1 class=\"header\">Edit Contact</h1>\n  <form [formGroup]=\"contactForm\" (ngSubmit)=\"saveContact()\">\n    <section>\n      <nav>Name/Info</nav>\n      <div>\n        <!-- <input [formControl]=\"firstName\" placeholder=\"First Name\" /> -->\n        <input formControlName=\"firstName\" placeholder=\"First Name\" />\n        <input formControlName=\"lastName\" placeholder=\"Last Name\" />\n        <input formControlName=\"dateOfBirth\" placeholder=\"Date of Birth\" />\n        <input formControlName=\"favoritesRanking\" placeholder=\"Favorites Ranking\" />\n      </div>\n    </section>\n    <section>\n      <nav>Phone</nav>\n      <div formGroupName=\"phone\" class=\"flex-column\">\n        <div class=\"flex-group\">\n          <input formControlName=\"phoneNumber\" placeholder=\"Phone\" />\n          <img src=\"/assets/plus-grey-blue.png\" class=\"add\" />\n        </div>\n        <div class=\"radio\">\n          <input type=\"radio\" formControlName=\"phoneType\" value=\"mobile\" /> Mobile\n          <input type=\"radio\" formControlName=\"phoneType\" value=\"work\" /> Work\n          <input type=\"radio\" formControlName=\"phoneType\" value=\"other\" /> Other\n        </div>\n      </div>\n    </section>\n    <section>\n      <nav>Address</nav>\n      <div>\n        <div formGroupName=\"address\" class=\"address\">\n          <div class=\"flex-group\">\n            <input formControlName=\"streetAddress\" placeholder=\"Address\" />\n            <img src=\"/assets/plus-grey-blue.png\" class=\"add\" />\n          </div>\n          <input placeholder=\"City\" formControlName=\"city\" />\n          <input placeholder=\"State/Region\" formControlName=\"state\" />\n          <input placeholder=\"Zip/Postal Code\" formControlName=\"postalCode\" />\n          <select>\n            <option value=\"home\">Home</option>\n            <option value=\"work\">Work</option>\n            <option value=\"mobile\">Other</option>\n          </select>\n        </div>\n      </div>\n    </section>\n  </form>\n  <div class=\"buttons\">\n    <button class=\"secondary\">Cancel</button>\n    <button type=\"submit\" class=\"primary\" (click)=\"saveContact()\">Save</button>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}